<project name="scrumwall" default="deploy-dev">
	<property file="build.properties" />
	
	<path id="compile.classpath">
	  <pathelement path="${classes.dir}" />
	  <fileset dir="${lib.dir}">
	    <include name="**/*.jar" />
	  </fileset>
	</path>
	
	<taskdef resource="scala/tools/ant/antlib.xml">
	    <classpath>
	        <pathelement location="${lib.dir}/scala-compiler.jar"/>
	        <pathelement location="${lib.dir}/scala-library.jar"/>
	    </classpath>
	</taskdef>
	
	<taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
  <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>

	<target name="reload" description="Reload webapp in tomcat">
    <reload  url="${tomcat.manager}" username="${tomcat.username}" password="${tomcat.password}"
            path="/${projectname}" />
  </target>
	
  <target name="undeploy" description="Remove web application">
    <undeploy url="${tomcat.manager}" username="${tomcat.username}" password="${tomcat.password}"
            path="/${projectname}" />
  </target>

	<target name="start" description="Start webapp in tomcat">
		<start url="${tomcat.manager}" username="${tomcat.username}" password="${tomcat.password}"
		  path="/${projectname}" />
	</target>

	<target name="deploy-hudson"
          depends="clean, compile, prepareDistDirs, copy-dist-files, copyWeb"
          description="Task which builds and copies files to deployment dir without making jar">

		<copy todir="${tomcat.hudson.dir}/WEB-INF/classes">
		  <fileset dir="${classes.dir}">
		    <include name="**/*.class" />
		  </fileset>
		</copy>	
		<copy todir="${tomcat.hudson.dir}/WEB-INF/classes">
		  <fileset dir="${classes.dir}">
		    <include name="log4j.xml"/>
		  </fileset>
		</copy>

		<copy todir="${tomcat.hudson.dir}" overwrite="false">
	      <fileset dir="${build.dist.dir}" includes="**/*" />
	    </copy>
  	</target>
	
	<target name="deploy-dev"
          depends="clean, compile, prepareDistDirs, copyWeb, copyDev"
          description="Task which builds and copies files to deployment dir without making jar">

	    <copy todir="${tomcat.deploy.dir}/WEB-INF/classes">
	      <fileset dir="${classes.dir}">
	        <include name="**/*.class" />
	      </fileset>
	    </copy>
    
	    <copy todir="${tomcat.deploy.dir}/WEB-INF/classes">
	      <fileset dir="${build.dist.web-inf.dir}">
	        <include name="log4j.xml"/>
	      </fileset>
	    </copy>
  </target>
	
	<target name="compile" depends="_prepare" description="Compiles the .java files">
    <scalac srcdir="${src.dir}"
           destdir="${classes.dir}"
           deprecation="on"
           failonerror="true"
           classpathref="compile.classpath"
         encoding="${src.encoding}">
    </scalac>
  </target>		
	
	<target name="clean" description="Cleans the files and directories that are results of building">
    <delete dir="${classes.dir}" />
    <delete dir="${generated.dir}" />
    <delete dir="${build.dist.dir}" />
    <delete failonerror="false">
      <fileset dir="${build.dir}">
          <include name="*"/>
      </fileset>
    </delete>
  </target>
	
	<target name="prepareDistDirs">
    <mkdir dir="${build.dist.dir}" />
    <mkdir dir="${build.dist.web-inf.dir}" />
	  <mkdir dir="${build.dist.jsp.dir}" />
    <mkdir dir="${build.dist.lib.dir}" />
    <mkdir dir="${build.dist.conf.dir}" />
  </target>
	
	<target name="copy-dist-files" depends="_prepare">
    <copy todir="${build.dist.conf.dir}" filtering="true">
      <fileset dir="${etc.dir}" includes="*.properties" />
    </copy>

    <copy toDir="${build.dist.web-inf.dir}">
      <fileset dir="${etc.dir}" includes="*.xml" excludes="log4j.xml"/>
    </copy>
	<copy toDir="${classes.dir}">
      <fileset dir="${etc.dir}" includes="log4j.xml"/>
    </copy>
    <copy todir="${build.dist.lib.dir}">
      <fileset dir="${lib.dir}">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>
	
	<target name="copyWeb">
    <copy todir="${build.dist.dir}/js">
      <fileset dir="${static.dir}/js"/>
    </copy>
	<copy todir="${build.dist.dir}/css">
      <fileset dir="${static.dir}/css"/>
    </copy>
    <copy todir="${build.dist.jsp.dir}">
      <fileset dir="${static.dir}/jsp"/>
    </copy>
    
  </target>

  <target name="copyDev" depends="copy-dist-files">
    <copy todir="${tomcat.deploy.dir}" overwrite="false">
      <fileset dir="${build.dist.dir}" includes="**/*"/>
    </copy>
  </target> 
	
	<target name="_prepare">
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${generated.dir}" />    
  </target>
	
</project>